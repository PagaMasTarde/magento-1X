version: "3.5"

services:
  magento19:
    build:
      dockerfile: Dockerfile
      context: ./
    depends_on:
      - db
    environment:
      - MAGENTO_LOCALE=es_ES
      - MAGENTO_TIMEZONE=Europe/Madrid
      - MAGENTO_DEFAULT_CURRENCY=EUR
      - MAGENTO_ADMIN_FIRSTNAME=Owner
      - MAGENTO_ADMIN_LASTNAME=Store
      - MAGENTO_ADMIN_EMAIL=admin@example.com
      - MAGENTO_ADMIN_USERNAME=admin
      - MAGENTO_ADMIN_PASSWORD=password123
      - MAGENTO_DB_HOST=db
      - MAGENTO_DB_PASSWORD=password
      - MAGENTO_URL=magento19.docker:8080
    volumes:
      - ./extension:/pmt
    networks:
      - internal
      - public
      - shopper
    ports:
      - "8080:80"

  magento-test:
    build:
      dockerfile: Dockerfile
      context: ./
    depends_on:
      - db-test
    environment:
      - MAGENTO_LOCALE=es_ES
      - MAGENTO_TIMEZONE=Europe/Madrid
      - MAGENTO_DEFAULT_CURRENCY=EUR
      - MAGENTO_ADMIN_FIRSTNAME=Owner
      - MAGENTO_ADMIN_LASTNAME=Store
      - MAGENTO_ADMIN_EMAIL=admin@example.com
      - MAGENTO_ADMIN_USERNAME=admin
      - MAGENTO_ADMIN_PASSWORD=password123
      - MAGENTO_DB_HOST=db-test
      - MAGENTO_DB_PASSWORD=password
      - MAGENTO_URL=magento-test.docker:8082
    volumes:
      - ./extension:/pmt
    networks:
      - internal
      - public
    ports:
      - "8082:80"

  db:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=magento
    networks:
      - internal

  db-test:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=magento
    networks:
      - internal

  selenium:
    image: selenium/standalone-chrome
    networks:
      - public
    ports:
      - "4444:4444"
    extra_hosts:
      - "magento-test.docker:${DOCKERHOST}"

networks:
    internal:
    public:
    shopper:
      name: shopper-network
